{"version":3,"file":"component---src-pages-details-mdx-frontmatter-slug-js-content-file-path-details-attire-mdx-2f88637e38ade61acde4.js","mappings":"4NAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,EAAG,MACFC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,8CAA+CI,EAAAA,cAAoB,MAAO,wCAAyCA,EAAAA,cAAoB,MAAOA,EAAAA,cAAoBP,EAAYI,EAAG,CAC/NI,KAAM,OACL,kBACL,CAKA,MAJA,SAAoBT,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOI,EAAYH,EAAAA,cAAoBG,EAAWX,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,E,oBCVA,MAAMY,EAAaC,IAAsB,IAArB,KAACC,EAAI,SAAEC,GAASF,EAClC,OAAOL,EAAAA,cAAoBQ,EAAAA,EAAQ,CACjCC,UAAWH,EAAKI,IAAIC,YAAYC,OAC/BL,EAAS,EAYDM,EAAOC,IAAA,IAAC,KAACR,GAAKQ,EAAA,OAAKd,EAAAA,cAAoBe,EAAAA,EAAK,CACvDH,MAAON,EAAKI,IAAIC,YAAYC,OAC5B,EAEa,SAASI,EAAiBxB,GACvC,OAAOQ,EAAAA,cAAoBI,EAAYZ,EAAOQ,EAAAA,cAAoBiB,EAAqBzB,GACzF,C,+CCPA,IAhBYa,IAAgB,IAAf,MAAEO,GAAOP,EAClB,MAAMC,GAAOY,EAAAA,EAAAA,IAAe,cAU5B,OACIlB,EAAAA,cAAA,aAAQY,EAAM,MAAIN,EAAKa,KAAKC,aAAaR,MAAc,C,sECkBxD,MAAMS,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBvB,GAC/B,MAAMwB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAftB,EACFA,EAAWwB,GAGb,IAAIA,KAAsBxB,IAChC,CAACwB,EAAmBxB,GACzB,C","sources":["webpack://wedding-guest-site/./details/attire.mdx","webpack://wedding-guest-site/./src/pages/details/{mdx.frontmatter__slug}.js","webpack://wedding-guest-site/./src/components/seo.js","webpack://wedding-guest-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"Comfortable elegance for fun and dancing.\\n\", React.createElement(\"br\"), \"Bright colors and patterns welcome!\\n\", React.createElement(\"br\"), React.createElement(_components.a, {\n    href: \"ddd\"\n  }, \"Pinterest link\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/josephinesulimin/Documents/josephineandnoah.github.io/details/attire.mdx\";\nimport * as React from 'react';\nimport Layout from '../../components/layout';\nimport Seo from '../../components/seo';\nimport {graphql} from 'gatsby';\nconst DetailPost = ({data, children}) => {\n  return React.createElement(Layout, {\n    pageTitle: data.mdx.frontmatter.title\n  }, children);\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: {eq: $id}) {\n      frontmatter {\n        title\n\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nDetailPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(DetailPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","import * as React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\n\nconst Seo = ({ title }) => {\n    const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n    return (\n        <title>{title} | {data.site.siteMetadata.title}</title>\n    )\n}\n\nexport default Seo","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","_provideComponents","components","React","href","wrapper","MDXLayout","DetailPost","_ref","data","children","Layout","pageTitle","mdx","frontmatter","title","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","useStaticQuery","site","siteMetadata","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}